<Window x:Class="HakunaMatata.HexLines.MainWindow" x:Name="root"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
        xmlns:ctl="clr-namespace:Alba.Framework.Controls;assembly=Alba.Framework"
        xmlns:xx="clr-namespace:Alba.Framework.Markup;assembly=Alba.Framework"
        xmlns:conv="clr-namespace:Alba.Framework.Markup.Converters;assembly=Alba.Framework"
        xmlns:hex="clr-namespace:HakunaMatata.HexLines"
        d:DataContext="{d:DesignInstance hex:Table}"
        Title="Hex Lines" SizeToContent="WidthAndHeight"
        Background="Indigo">
    <Control.Resources>

        <conv:BoolToVisibilityConverter x:Key="convBoolToVis"/>

        <Style TargetType="ItemsControl">
            <Setter Property="Width" Value="{Binding Width}"/>
            <Setter Property="Height" Value="{Binding Height}"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <Canvas IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ContentPresenter" d:DataContext="{d:DesignInstance hex:Cell}">
                        <Setter Property="Canvas.Left" Value="{Binding X}"/>
                        <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate DataType="{x:Type hex:Cell}">
            <Polygon x:Name="figCell" Points="15,-26 30,0 15,26 -15,26 -30,0 -15,-26"
                    Stroke="SteelBlue" StrokeThickness="2" Fill="LightSkyBlue"
                    MouseDown="FigCell_OnMouseDown"/>
            <DataTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="figCell" Property="Fill" Value="DeepSkyBlue"/>
                </Trigger>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter TargetName="figCell" Property="Fill" Value="Yellow"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsAvailable}" Value="True">
                    <Setter TargetName="figCell" Property="Fill" Value="PaleGreen"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=figCell}" Value="True"/>
                        <Condition Binding="{Binding IsAvailable}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="figCell" Property="Fill" Value="YellowGreen"/>
                </MultiDataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate DataType="{x:Type hex:Ball}">
            <Grid>
                <Ellipse x:Name="figShadow" Width="40" Height="40" IsHitTestVisible="False" Fill="Black" Opacity="0.5" Margin="3 2 -3 -2"
                        Effect="{xx:BlurEffect KernelType=Box, Radius=5}"/>
                <Ellipse x:Name="figBall" Width="40" Height="40" IsHitTestVisible="False" Fill="{Binding BallColorBrush}">
                    <Ellipse.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform x:Name="transformSqueeze" CenterX="20" CenterY="20"/>
                            <RotateTransform x:Name="transformRotate" CenterX="20" CenterY="20"/>
                            <TranslateTransform x:Name="transformPos"/>
                        </TransformGroup>
                    </Ellipse.RenderTransform>
                </Ellipse>
                <Grid.RenderTransform>
                    <ScaleTransform x:Name="transformScale" CenterX="20" CenterY="20"/>
                </Grid.RenderTransform>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsNew}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation ctl:AnimProps.Target="figBall.Opacity" From="0" To="1" Duration="0:0:0.3"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformScale.ScaleX" From="0.2" To="0.6" Duration="0:0:0"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformScale.ScaleY" From="0.2" To="0.6" Duration="0:0:0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation ctl:AnimProps.Target="transformScale.ScaleX" To="1" Duration="0:0:0.2" DecelerationRatio="1"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformScale.ScaleY" To="1" Duration="0:0:0.2" DecelerationRatio="1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMoving}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation ctl:AnimProps.Target="transformRotate.Angle" By="360" Duration="0:0:0.2" RepeatBehavior="Forever"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformSqueeze.ScaleX" To="1.2" Duration="0:0:0.2"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformSqueeze.ScaleY" To="0.9" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation ctl:AnimProps.Target="transformRotate.Angle" To="0" Duration="0:0:0.02"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformSqueeze.ScaleX" To="1" Duration="0:0:0.2"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformSqueeze.ScaleY" To="1" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsDestroyed}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation ctl:AnimProps.Target="figBall.Opacity" To="0" Duration="0:0:0.3"/>
                                <DoubleAnimation ctl:AnimProps.Target="figShadow.Opacity" To="0" Duration="0:0:0.2"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformRotate.Angle" By="3600" Duration="0:0:0.3" AccelerationRatio="1"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformSqueeze.ScaleX" To="1.7" Duration="0:0:0.3"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformSqueeze.ScaleY" To="0.5" Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding Cell.IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard RepeatBehavior="Forever">
                                <DoubleAnimation ctl:AnimProps.Target="transformPos.Y" To="-10" BeginTime="0:0:0.0" Duration="0:0:0.2" DecelerationRatio="1"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformPos.Y" To="0" BeginTime="0:0:0.2" Duration="0:0:0.2" AccelerationRatio="1"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformPos.Y" To="5" BeginTime="0:0:0.4" Duration="0:0:0.1"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformPos.Y" To="0" BeginTime="0:0:0.5" Duration="0:0:0.1"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformSqueeze.ScaleY" To="0.75" BeginTime="0:0:0.4" Duration="0:0:0.1"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformSqueeze.ScaleY" To="1.0" BeginTime="0:0:0.5" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation ctl:AnimProps.Target="transformPos.Y" To="0" Duration="0:0:0.1"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformSqueeze.ScaleY" To="1.0" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

    </Control.Resources>
    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Column="0" Grid.Row="0" Height="60">
            <TextBlock Text="888888" Foreground="Green" FontSize="40" FontFamily="Resources/#Digital"
                    Margin="30 0" VerticalAlignment="Center"/>
            <TextBlock Text="{Binding Score, StringFormat=000000}" Foreground="Yellow" FontSize="40" FontFamily="Resources/#Digital"
                    Margin="30 0" VerticalAlignment="Center"/>
        </Grid>

        <Grid Grid.Column="0" Grid.Row="1" Margin="10 0 10 10">
            <ItemsControl ItemsSource="{Binding Cells}" MouseDown="LstTable_OnMouseDown"/>
            <ItemsControl x:Name="lstBalls" ItemsSource="{Binding Balls}" IsHitTestVisible="False"/>
        </Grid>

        <Grid Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Visibility="{Binding IsGameOver, Converter={StaticResource convBoolToVis}}">
            <Rectangle Fill="Red" ctl:AnimProps.Animate="True">
                <ctl:AnimProps.Animations>
                    <ctl:Animation Binding="{Binding IsGameOver}" Value="True" Dir="Enter" Last="True">
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="0.4" Duration="0:0:2"/>
                    </ctl:Animation>
                </ctl:AnimProps.Animations>
            </Rectangle>
            <TextBlock Text="{Binding Score, StringFormat='GAME OVER!&#10;SCORE: {0}'}" Foreground="Red" FontSize="100" FontFamily="Resources/#Digital"
                    Margin="-1000" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center"
                    Effect="{xx:DropShadowEffect Color=Black, ShadowDepth=0, BlurRadius=10}" ctl:AnimProps.Animate="True">
                <ctl:AnimProps.Animations>
                    <ctl:Animation Binding="{Binding IsGameOver}" Value="True" Dir="Enter" Last="True">
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:2"/>
                        <DoubleAnimation Storyboard.TargetProperty="FontSize" From="400" To="100" Duration="0:0:2"/>
                    </ctl:Animation>
                </ctl:AnimProps.Animations>
            </TextBlock>
        </Grid>

    </Grid>
</Window>
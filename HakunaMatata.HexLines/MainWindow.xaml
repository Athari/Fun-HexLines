<Window x:Class="HakunaMatata.HexLines.MainWindow" x:Name="root"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
        xmlns:ctl="clr-namespace:Alba.Framework.Controls;assembly=Alba.Framework"
        xmlns:xx="clr-namespace:Alba.Framework.Markup;assembly=Alba.Framework"
        xmlns:conv="clr-namespace:Alba.Framework.Markup.Converters;assembly=Alba.Framework"
        xmlns:hex="clr-namespace:HakunaMatata.HexLines"
        d:DataContext="{d:DesignInstance hex:Table}"
        Title="Hex Lines" SizeToContent="WidthAndHeight"
        Background="Indigo">
    <Control.Resources>

        <conv:BoolToVisibilityConverter x:Key="convBoolToVis"/>

        <Style x:Key="styBtnBase" TargetType="ButtonBase">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Padding" Value="10 3"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Foreground" Value="Indigo"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ButtonBase">
                        <Border x:Name="brdButton" BorderBrush="SteelBlue" BorderThickness="2" Background="LightSkyBlue" CornerRadius="5">
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="brdButton" Property="Background" Value="DeepSkyBlue"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="brdButton" Property="Background" Value="PaleGreen"/>
                                <Setter TargetName="brdButton" Property="BorderThickness" Value="3"/>
                                <Setter TargetName="brdButton" Property="Margin" Value="-1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" BasedOn="{StaticResource styBtnBase}"/>
        <Style TargetType="ToggleButton" BasedOn="{StaticResource styBtnBase}"/>

        <Style x:Key="styLstCells" TargetType="ItemsControl">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="{Binding Width}"/>
            <Setter Property="Height" Value="{Binding Height}"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <Canvas IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ContentPresenter" d:DataContext="{d:DesignInstance hex:Cell}">
                        <Setter Property="Canvas.Left" Value="{Binding X}"/>
                        <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate DataType="{x:Type hex:Cell}">
            <Polygon x:Name="figCell" Points="15,-26 30,0 15,26 -15,26 -30,0 -15,-26"
                    Stroke="SteelBlue" StrokeThickness="2" Fill="LightSkyBlue"
                    MouseDown="FigCell_OnMouseDown"/>
            <DataTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="figCell" Property="Fill" Value="DeepSkyBlue"/>
                </Trigger>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter TargetName="figCell" Property="Fill" Value="Yellow"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsAvailable}" Value="True">
                    <Setter TargetName="figCell" Property="Fill" Value="PaleGreen"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=figCell}" Value="True"/>
                        <Condition Binding="{Binding IsAvailable}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="figCell" Property="Fill" Value="YellowGreen"/>
                </MultiDataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate DataType="{x:Type hex:Ball}">
            <Grid>
                <Ellipse x:Name="figShadow" Width="40" Height="40" IsHitTestVisible="False" Fill="Black" Opacity="0.5" Margin="3 2 -3 -2"
                        Effect="{xx:BlurEffect KernelType=Box, Radius=5}"/>
                <Ellipse x:Name="figBall" Width="40" Height="40" IsHitTestVisible="False" Fill="{Binding BallColorBrush}">
                    <Ellipse.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform x:Name="transformSqueeze" CenterX="20" CenterY="20"/>
                            <RotateTransform x:Name="transformRotate" CenterX="20" CenterY="20"/>
                            <TranslateTransform x:Name="transformPos"/>
                        </TransformGroup>
                    </Ellipse.RenderTransform>
                </Ellipse>
                <Grid.RenderTransform>
                    <ScaleTransform x:Name="transformScale" CenterX="20" CenterY="20"/>
                </Grid.RenderTransform>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsNew}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation ctl:AnimProps.Target="figBall.Opacity" From="0" To="1" Duration="0:0:0.3"/>
                                <DoubleAnimation ctl:AnimProps.Target="figShadow.Opacity" From="0" To="0.5" Duration="0:0:0.3"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformScale.ScaleX" From="0.2" To="0.6" Duration="0:0:0.2" DecelerationRatio="1"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformScale.ScaleY" From="0.2" To="0.6" Duration="0:0:0.2" DecelerationRatio="1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation ctl:AnimProps.Target="transformScale.ScaleX" To="1" Duration="0:0:0.2" DecelerationRatio="1"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformScale.ScaleY" To="1" Duration="0:0:0.2" DecelerationRatio="1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMoving}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation ctl:AnimProps.Target="transformRotate.Angle" By="360" Duration="0:0:0.2" RepeatBehavior="Forever"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformSqueeze.ScaleX" To="1.2" Duration="0:0:0.2"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformSqueeze.ScaleY" To="0.9" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation ctl:AnimProps.Target="transformRotate.Angle" To="0" Duration="0:0:0.02"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformSqueeze.ScaleX" To="1" Duration="0:0:0.2"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformSqueeze.ScaleY" To="1" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsDestroyed}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation ctl:AnimProps.Target="figBall.Opacity" To="0" Duration="0:0:0.3"/>
                                <DoubleAnimation ctl:AnimProps.Target="figShadow.Opacity" To="0" Duration="0:0:0.2"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformRotate.Angle" By="3600" Duration="0:0:0.3" AccelerationRatio="1"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformSqueeze.ScaleX" To="1.7" Duration="0:0:0.3"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformSqueeze.ScaleY" To="0.5" Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding Cell.IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard RepeatBehavior="Forever">
                                <DoubleAnimation ctl:AnimProps.Target="transformPos.Y" To="-10" BeginTime="0:0:0.0" Duration="0:0:0.2" DecelerationRatio="1"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformPos.Y" To="0" BeginTime="0:0:0.2" Duration="0:0:0.2" AccelerationRatio="1"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformPos.Y" To="5" BeginTime="0:0:0.4" Duration="0:0:0.1"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformPos.Y" To="0" BeginTime="0:0:0.5" Duration="0:0:0.1"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformSqueeze.ScaleY" To="0.75" BeginTime="0:0:0.4" Duration="0:0:0.1"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformSqueeze.ScaleY" To="1.0" BeginTime="0:0:0.5" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation ctl:AnimProps.Target="transformPos.Y" To="0" Duration="0:0:0.1"/>
                                <DoubleAnimation ctl:AnimProps.Target="transformSqueeze.ScaleY" To="1.0" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

    </Control.Resources>
    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <DockPanel Grid.Column="0" Grid.Row="0" Height="60" LastChildFill="False">
            <!-- Score -->
            <Grid VerticalAlignment="Center" Margin="30 0">
                <TextBlock Text="888888" Foreground="Green" FontSize="40" FontFamily="Resources/#Digital" TextAlignment="Right"/>
                <TextBlock Text="{Binding Score}" Foreground="Yellow" FontSize="40" FontFamily="Resources/#Digital" TextAlignment="Right"/>
            </Grid>
            <!-- Next balls -->
            <ItemsControl ItemsSource="{Binding NewBalls}" VerticalAlignment="Center" MaxWidth="400">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel IsItemsHost="True" Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
            <!-- Menu -->
            <StackPanel DockPanel.Dock="Right" VerticalAlignment="Center" Margin="0 0 10 0" Height="40">
                <Button Content="?"/>
            </StackPanel>
            <Grid DockPanel.Dock="Right" VerticalAlignment="Center" Height="40">
                <Canvas Width="{Binding ActualWidth, ElementName=gridNewGame}" ClipToBounds="True">
                    <Grid x:Name="gridNewGame">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0">
                            <ToggleButton x:Name="chkNewButton" Content="New game" HorizontalAlignment="Right"/>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                            <Button Content="Lines" Tag="{x:Static hex:GameMode.Lines}" Click="BtnNewGame_OnClick"/>
                            <Button Content="Groups" Tag="{x:Static hex:GameMode.Groups}" Click="BtnNewGame_OnClick"/>
                            <Button Content="Options..." Tag="{x:Null}" Click="BtnNewGame_OnClick"/>
                            <ToggleButton Content="Back" IsChecked="{Binding IsChecked, ElementName=chkNewButton, Mode=TwoWay}"/>
                        </StackPanel>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=chkNewButton}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(Canvas.Top)" From="0" To="-40" Duration="0:0:0.5" DecelerationRatio="1"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(Canvas.Top)" From="-40" To="0" Duration="0:0:0.5" DecelerationRatio="1"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                    </Grid>
                </Canvas>
            </Grid>
        </DockPanel>

        <!-- Table -->
        <Grid Grid.Column="0" Grid.Row="1" Margin="10 0 10 10">
            <ItemsControl ItemsSource="{Binding Cells}" MouseDown="LstTable_OnMouseDown" Style="{StaticResource styLstCells}"/>
            <ItemsControl x:Name="lstBalls" ItemsSource="{Binding Balls}" Style="{StaticResource styLstCells}" IsHitTestVisible="False"/>
        </Grid>

        <!-- Game over overlay -->
        <Grid Grid.Column="0" Grid.Row="1" Visibility="{Binding IsGameOver, Converter={StaticResource convBoolToVis}}">
            <Rectangle Fill="Red" ctl:AnimProps.Animate="True">
                <ctl:AnimProps.Animations>
                    <ctl:Animation Binding="{Binding IsGameOver}" Value="True" Dir="Enter" Last="True">
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="0.4" Duration="0:0:2"/>
                    </ctl:Animation>
                </ctl:AnimProps.Animations>
            </Rectangle>
            <TextBlock Text="{Binding Score, StringFormat='GAME OVER!&#10;SCORE: {0}'}" Foreground="Red" FontSize="100" FontFamily="Resources/#Digital"
                    Margin="-1000" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center"
                    Effect="{xx:DropShadowEffect Color=Black, ShadowDepth=0, BlurRadius=10}" ctl:AnimProps.Animate="True">
                <ctl:AnimProps.Animations>
                    <ctl:Animation Binding="{Binding IsGameOver}" Value="True" Dir="Enter" Last="True">
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:2"/>
                        <DoubleAnimation Storyboard.TargetProperty="FontSize" From="400" To="100" Duration="0:0:2"/>
                    </ctl:Animation>
                </ctl:AnimProps.Animations>
            </TextBlock>
        </Grid>

    </Grid>
</Window>